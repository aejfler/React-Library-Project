{"ast":null,"code":"var _jsxFileName = \"/home/aga/Desktop/react-library-project/src/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Cards from './Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [searchPhrase, setSearchPhrase] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const searchBook = async author => {\n    try {\n      const response = await fetch(`https://wolnelektury.pl/api/authors/${author}/books/`);\n      const data = await response.json();\n      setSearchResults(data);\n      console.log(data);\n    } catch (err) {\n      alert(new Error(err));\n    }\n  };\n  const handleSearch = async () => {\n    await searchBook(searchPhrase.replace(/ /g, \"-\").toLowerCase());\n    setSearchPhrase(\"\");\n  };\n  useEffect(() => {\n    fetch(`https://wolnelektury.pl/api/authors/ignacy-krasicki/books/`).thenresponse.json();\n    setSearchResults(data);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputSearch\",\n        placeholder: \"Search by author ...\",\n        value: searchPhrase,\n        onChange: e => setSearchPhrase(e.target.value),\n        onKeyDown: async e => {\n          if (e.key === 'Enter') {\n            await handleSearch();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      arrayOfBooks: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Search, \"bRCFxWOVzHhXZXU448PNgZ0soiI=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","Cards","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","_s","searchPhrase","setSearchPhrase","searchResults","setSearchResults","searchBook","author","response","fetch","data","json","console","log","err","alert","Error","handleSearch","replace","toLowerCase","thenresponse","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onKeyDown","key","arrayOfBooks","_c","$RefreshReg$"],"sources":["/home/aga/Desktop/react-library-project/src/Search.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Cards from './Cards';\n\nexport default function Search() {\n  const [searchPhrase, setSearchPhrase] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const searchBook = async (author) => {\n    try {\n      const response = await fetch(`https://wolnelektury.pl/api/authors/${author}/books/`);\n      const data = await response.json();\n      setSearchResults(data);\n      console.log(data);\n    } catch (err) {\n      alert(new Error(err));\n    }\n  }\n\n  const handleSearch = async () => {\n    await searchBook(searchPhrase.replace(/ /g, \"-\").toLowerCase());\n    setSearchPhrase(\"\")\n  }\n  \n  useEffect(() => {\n    fetch(`https://wolnelektury.pl/api/authors/ignacy-krasicki/books/`)\n    .thenresponse.json();\n    setSearchResults(data);\n\n\n})\n\n  return (\n    <>\n      <div className='searchContainer'>\n        <div className='searchBar'></div>\n        <input\n          className='inputSearch'\n          placeholder='Search by author ...'\n          value={searchPhrase}\n          onChange={e => setSearchPhrase(e.target.value)}\n          onKeyDown={async e => {\n            if (e.key === 'Enter') {\n              await handleSearch();\n            }\n          }}\n        />\n      </div>\n      <Cards arrayOfBooks={searchResults} />\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMa,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAsCF,MAAO,SAAQ,CAAC;MACpF,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCN,gBAAgB,CAACK,IAAI,CAAC;MACtBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZC,KAAK,CAAC,IAAIC,KAAK,CAACF,GAAG,CAAC,CAAC;IACvB;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMX,UAAU,CAACJ,YAAY,CAACgB,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;IAC/DhB,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAEDT,SAAS,CAAC,MAAM;IACde,KAAK,CAAE,4DAA2D,CAAC,CAClEW,YAAY,CAACT,IAAI,CAAC,CAAC;IACpBN,gBAAgB,CAACK,IAAI,CAAC;EAG1B,CAAC,CAAC;EAEA,oBACEb,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA;MAAKyB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC9BxB,OAAA;QAAKyB,SAAS,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjC7B,OAAA;QACEyB,SAAS,EAAC,aAAa;QACvBK,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAE1B,YAAa;QACpB2B,QAAQ,EAAEC,CAAC,IAAI3B,eAAe,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,SAAS,EAAE,MAAMF,CAAC,IAAI;UACpB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAE;YACrB,MAAMhB,YAAY,CAAC,CAAC;UACtB;QACF;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7B,OAAA,CAACF,KAAK;MAACuC,YAAY,EAAE9B;IAAc;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACtC,CAAC;AAEP;AAACzB,EAAA,CA/CuBD,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}